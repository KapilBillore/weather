{"version":3,"sources":["./src/environments/environment.ts","./src/app/view/view.component.ts","./src/app/view/view.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/fetchweather.service.ts","./src/app/shared/Weather.model.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { WeekDay } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FetchweatherService } from '../fetchweather.service';\nimport { Weather } from '../shared/Weather.model';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n\n  weather: Weather = {\n    timezone: '',\n    temperature: 0,\n    description: '',\n    icon:''\n  };\n\n  weather2:any;\n\n  imgsrc='';\n\n  constructor(private fetchweather: FetchweatherService) { }\n\n  ngOnInit(): void {\n\n    let lat: number;\n    let long: number;\n\n    navigator.geolocation.getCurrentPosition(position => {\n      lat = position.coords.latitude;\n      long = position.coords.longitude;\n      console.log(lat + \" , \" + long);\n\n      this.fetchweather.getData(lat, long).subscribe(res => {\n        let temp: string[] = res.current.weather;\n        this.weather = new Weather(res.timezone, res.current.temp, res.current.weather[0].description, res.current.weather[0].icon)\n        this.imgsrc=`http://openweathermap.org/img/wn/${this.weather.icon}@2x.png`;\n\n        // this.weather2=res;\n        // console.log(this.weather2)\n      });\n\n\n\n    });\n\n  }\n\n}\n","<div class=\"location\">\n  <h1 class=\"timezone\">{{ weather.timezone }}</h1>\n  <img [src]=\"imgsrc\" alt=\"\"/>\n</div>\n\n<div class=\"temperature\">\n  <div class=\"degree-section\">\n    <h2 class=\"degree\">{{ weather.temperature }}</h2>\n    <span class=\"scale\">C</span>\n  </div>\n  <div class=\"temperature-description\">{{ weather.description }}</div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'weather';\n}\n","<app-view></app-view>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ViewComponent } from './view/view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FetchweatherService {\n\n  constructor(private http: HttpClient) { }\n\n  getData(lat:number, long:number) : Observable<any>{\n    let url:string=`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&exclude=hourly,daily&appid=af372c82ab8148a6ccef6f92660bd5c2&units=metric`;\n\n    return this.http.get(url);\n  }\n}\n","export class Weather {\r\n  constructor(public timezone: string, public temperature:number,public description: string, public icon:string){\r\n\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}